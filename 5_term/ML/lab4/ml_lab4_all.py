# -*- coding: utf-8 -*-
"""ML lab4 all.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sz9gO9OdjEDOFr5HRncJxwiiVjlMqvUb
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb
import numpy as np

"""Задание №1
Выполните задания из файла https://cloud.mail.ru/public/vt9e/vS12exFen

[Решение задания](https://colab.research.google.com/drive/18zqA0SpL4O_3fRyASR0CSSlQ9ItAHYm4?usp=sharing)

Задание 2
Скачайте файл с данными о публикациях на сайте Хабрахабр
(https://cloud.mail.ru/public/3ViL/q5xSM1TH2). Выполните следующие действия:

1. Изучите датасет, попробуйте понять какой столбец за что отвечает.
"""

# 2.1

ht = pd.read_csv('howpop_train.csv')
ht

"""2. Удалите столбцы, названия которых заканчиваются на _lognorm. Выберите их с помощью filter() и удалите drop-ом:"""

ht.drop(
    filter(lambda c: c.endswith("_lognorm"), ht.columns),
    axis=1, # axis = 1: столбцы
    inplace=True,
) # избавляет от необходимости сохранять датасет
# ht['post_id'].astype(int)
ht

"""3. Столбец published (время публикации) содержит строки. Чтобы работать с этими
данными как с датой/временем публикации, приведите их к типу datetime:
"""

# 3
ht["published"] = pd.to_datetime(ht.published, yearfirst=True)
print(ht['published'].dtype)
ht

"""4. Создайте несколько столбцов на основе данных о времени публикации:"""

# 4
ht["year"] = [d.year for d in ht.published]
ht["month"] = [d.month for d in ht.published]

ht["dayofweek"] = [d.isoweekday() for d in ht.published]
ht["hour"] = [d.hour for d in ht.published]

ht

"""5. Используя Seaborn, постройте визуализацию и покажите в каком месяце (и какого года) было больше всего публикаций"""

# 5

data = ht[['month', 'year']]

graf = sb.FacetGrid(data, col='year', col_wrap=3)

graf.map(sb.countplot, 'month')

"""6. Используя Seaborn, постройте график зависимости числа публикаций от дня недели, используя параметр hue."""

# 6

sb.countplot(x='dayofweek', hue='dayofweek', data=ht)
plt.show()

"""7. Используя Seaborn, проведите визуальный анализ и отметьте верные утверждения
про данный датасет:
"""

# 7
plt.figure(figsize=(24, 6))
plt.subplot(1, 4, 1)
plt.title('Views')
sb.barplot(y=ht['hour'], x=ht['views'], orient="h")
# plt.show()
# Больше всего просмотров набирают статьи, опубликованные в 12 часов дня - НЕВЕРНО
# Больше всего просмотров набирают статьи, опубликованные в 6 часов утра - ВЕРНО

plt.subplot(1, 4, 2)
plt.title('All comments')
sb.barplot(y=ht['hour'], x=ht['comments'], orient="h")
# plt.show()
# У опубликованных в 10 утра постов больше всего комментариев - НЕВЕРНО
plt.subplot(1, 4, 3)
plt.title('Comments habr')
sb.barplot(y=ht['hour'], x=ht['comments'], data=ht[ht['domain'] == 'habrahabr.ru'], orient="h")
# plt.show()

# На хабре дневные статьи комментируют чаще, чем вечерние - НЕВЕРНО
plt.subplot(1, 4, 4)

# ht_gik =ht[ht['domain'] == 'geektimes.ru']
plt.title('Comments geektimes')
sb.barplot(y='hour', x='comments', data=ht[ht['domain'] == 'geektimes.ru'], orient="h")
# plt.show()
# Максимальное число комментариев на гиктаймсе набрала статья, опубликованная в 9 часов вечера -НЕВЕРНО

"""8. Используя Seaborn, проведите визуальный анализ и определите кого из топ-20 авторов чаще всего минусуют?"""

# 8

top_20 = ht['author'].value_counts().head(20).index
# print(top_20)
# ht['votes_minus']
sb.barplot(y='author', x='votes_minus', data=ht[ht['author'].apply(lambda x: x in top_20)], orient="h")

"""9. Используя Seaborn, сравните субботы и понедельники. Правда ли, что по субботам
авторы пишут в основном днём, а по понедельникам — в основном вечером?
"""

# 9

sb.violinplot(y='hour', x='dayofweek', data=ht[(ht['dayofweek'] == 7) | (ht['dayofweek'] == 2)])
plt.show()

# Неправда